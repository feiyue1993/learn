.wrapper{
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
}

.box{
  /* height: 50px; */
  border: 1px dashed black;
}


/* 隐式行自适应大小 */
.wrapper1{
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
  grid-auto-rows: 100px;
}

.wrapper2{
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
  grid-auto-rows: minmax(60px, auto);
}

.wrapper3{
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
  grid-auto-rows: 50px 60px 70px; /* 让创建出的行保持最小尺寸 */
}

/* 按列自动定位 */
.wrapper4{
  display: grid;
  grid-gap: 10px;
  grid-auto-flow: column;
  grid-template-rows: repeat(3, 60px);
  grid-auto-columns: 300px 100px;
}

/* 被自动定位的项目顺序 */
.wrapper5{
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: 50px;
  grid-gap: 10px;
}

.wrapper5 .box:nth-child(2){
  grid-column: 3;
  grid-row: 2 / 4;
}

.wrapper5 .box:nth-child(5){
  grid-column: 1 / span 2;
  grid-row: 1 / span 2;s
}

.wrapper6{
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: 100px;
  grid-gap: 10px;
  grid-auto-flow: dense; /* 不加这个属性,前面存在的缺口不会进行补充 */
}

.wrapper6 .box:nth-child(4n+1){
  grid-column-end: span 2;
  grid-row-end: span 2;
}
