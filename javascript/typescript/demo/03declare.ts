/*
 *  @author: feiyue
 *  @brief: 变量声明
 *  @dete: 2020-06-27 15:48
 *  @version: 1.0.0
 */

/* var */
/* 作用域规则 */
/*
 *  引发的问题
 *  变量提升**:变量无论在哪里声明,编译阶段都会被提取到执行上下文的变量环境中,这些变量在整个函数体内部的任何地方都能被访问到.
 *  变量提升带来的问题**(从执行上下文和调用栈上理解)
 *      1.  变量容易被覆盖
 *      2.  本应销毁的变量没有被销毁
 */

/* let */
/* 作用域规则 */
/*
 *  块级作用域
 *      1.不能再被声明之前读或写,虽然这些变量始终存在于他们的作用域,但是知道声明它的代码之前都属于暂时性死区
 *  不存在变量提升
 *  变量不能重复定义
 */

/* const */
/* 在let的基础上增强,阻止对变量的再次赋值 */